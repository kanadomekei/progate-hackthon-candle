AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Go-Gin

  Sample SAM Template for Go-Gin

Globals:
  Function:
    Timeout: 10

Resources:
  GinFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 256
      Policies:
        - CloudWatchLogsFullAccess
      LoggingConfig:
        LogFormat: JSON
        LogGroup: !Sub "/aws/lambda/${AWS::StackName}-GinFunction"
      Events:
        APIEvent:
          Type: HttpApi
    Metadata:
      DockerTag: v1
      DockerContext: ./app
      Dockerfile: Dockerfile

  GinFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-GinFunction"
      RetentionInDays: 30

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties: 
      DistributionConfig: 
        Origins: 
          - Id: ApiGatewayOrigin
            DomainName: !Sub "${ServerlessHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}"
            CustomOriginConfig: 
              OriginProtocolPolicy: https-only
        Enabled: true
        DefaultCacheBehavior: 
          TargetOriginId: ApiGatewayOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: 
            - GET
            - HEAD
            - OPTIONS
          CachedMethods: 
            - GET
            - HEAD
          ForwardedValues: 
            QueryString: true
            Headers: 
              - Authorization
        ViewerCertificate: 
          CloudFrontDefaultCertificate: true

Outputs:
  GinApi:
    Description: "API Gateway endpoint URL for Prod stage for Gin function"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/"

  CloudFrontUrl:
    Description: "CloudFront URL"
    Value: !GetAtt CloudFrontDistribution.DomainName

  LogGroupName:
    Description: "CloudWatch Logs Log Group Name"
    Value: !Sub "/aws/lambda/${AWS::StackName}-GinFunction"

